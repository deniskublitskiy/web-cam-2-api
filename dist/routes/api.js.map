{"version":3,"sources":["routes/api.js"],"names":["express","require","jwt","apiRoutes","Router","module","exports","app","io","transporter","use","req","res","next","token","body","headers","authorization","status","send","verify","get","err","decoded","json","message"],"mappings":";;AAGA;;;;AACA;;;;AACA;;;;;;AALA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMD,QAAQ,cAAR,CAAZ;AACA,IAAME,YAAYH,QAAQI,MAAR,EAAlB;;;AAKAC,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAAgBC,EAAhB,EAAoBC,WAApB,EAAiC;AAC9CN,cAAUO,GAAV,CAAc,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9B,YAAIC,QAAQH,IAAII,IAAJ,CAASD,KAAT,IAAkBH,IAAIK,OAAJ,CAAYC,aAA1C;AACA,YAAI,CAACH,KAAL,EAAY;AACR,mBAAOF,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB,CAAP;AACH;AACDjB,YAAIkB,MAAJ,CAAWN,KAAX,EAAkBP,IAAIc,GAAJ,CAAQ,YAAR,CAAlB,EAAyC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACvD,gBAAID,GAAJ,EAAS;AACL,uBAAOV,IAAIM,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAACC,SAASH,IAAIG,OAAJ,IAAeH,GAAzB,EAArB,CAAP;AACH;AACDX,gBAAIY,OAAJ,GAAcA,OAAd;AACAV;AACH,SAND;AAOH,KAZD;;AAcAV,cAAUO,GAAV,CAAc,QAAd,EAAwB,oBAAWF,EAAX,CAAxB;AACAL,cAAUO,GAAV,CAAc,QAAd,EAAwB,oBAAWF,EAAX,EAAeC,WAAf,CAAxB;AACAN,cAAUO,GAAV,CAAc,QAAd,EAAwB,oBAAWF,EAAX,CAAxB;;AAEA,WAAOL,SAAP;AACH,CApBD","file":"api.js","sourcesContent":["const express = require('express');\r\nconst jwt = require('jsonwebtoken');\r\nconst apiRoutes = express.Router();\r\nimport userRoutes from './user';\r\nimport chatRoutes from './chat';\r\nimport testRoutes from './test';\r\n\r\nmodule.exports = function (app , io, transporter) {\r\n    apiRoutes.use((req, res, next) => {\r\n        let token = req.body.token || req.headers.authorization;\r\n        if (!token) {\r\n            return res.status(401).send('No token provided.');\r\n        }\r\n        jwt.verify(token, app.get('API_SECRET'), (err, decoded) => {\r\n            if (err) {\r\n                return res.status(401).json({message: err.message || err});\r\n            }\r\n            req.decoded = decoded;\r\n            next();\r\n        });\r\n    });\r\n\r\n    apiRoutes.use('/users', userRoutes(io));\r\n    apiRoutes.use('/chats', chatRoutes(io, transporter));\r\n    apiRoutes.use('/tests', testRoutes(io));\r\n\r\n    return apiRoutes;\r\n};"]}
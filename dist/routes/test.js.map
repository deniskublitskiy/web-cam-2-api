{"version":3,"sources":["routes/test.js"],"names":["io","router","get","req","res","next","TestType","fetchAll","testTypes","status","json","toJSON","findSocketByUserId","userId","connected","sockets","socketId","Object","keys","find","key","handshake","query","require","TestTypes","Router"],"mappings":";;;;;;;;;;kBAKe,UAAUA,EAAV,EAAc;AAAA;;AACzBC,WAAOC,GAAP,CAAW,QAAX;AAAA,gEAAqB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAESC,SAASC,QAAT,EAFT;;AAAA;AAETC,qCAFS;;AAGbJ,gCAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,UAAUG,MAAV,EAArB;AAHa;AAAA;;AAAA;AAAA;AAAA;;AAKbN;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArB;;AAAA;AAAA;AAAA;AAAA;;AASA,aAASO,kBAAT,CAA4BC,MAA5B,EAAoC;AAChC,YAAIC,YAAYd,GAAGe,OAAH,CAAWD,SAA3B;AACA,YAAIE,WAAWC,OAAOC,IAAP,CAAYJ,SAAZ,EACVK,IADU,CACL;AAAA,mBAAOL,UAAUM,GAAV,EAAeC,SAAf,CAAyBC,KAAzB,CAA+BT,MAA/B,IAAyCA,MAAhD;AAAA,SADK,CAAf;;AAGA,eAAOC,UAAUE,QAAV,CAAP;AACH;;AAED,WAAOf,MAAP;AACH,C;;AAxBD;;;;;;;;eAC8BsB,QAAQ,WAAR,C;IAAvBjB,Q,YAAAA,Q;IAAUkB,S,YAAAA,S;;AAEjB,IAAMvB,SAAS,kBAAQwB,MAAR,EAAf","file":"test.js","sourcesContent":["import express from 'express';\r\nconst {TestType, TestTypes} = require('../models');\r\n\r\nconst router = express.Router();\r\n\r\nexport default function (io) {\r\n    router.get('/types', async (req, res, next) => {\r\n        try {\r\n            let testTypes = await TestType.fetchAll();\r\n            res.status(200).json(testTypes.toJSON());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    });\r\n\r\n    function findSocketByUserId(userId) {\r\n        let connected = io.sockets.connected;\r\n        let socketId = Object.keys(connected)\r\n            .find(key => connected[key].handshake.query.userId == userId);\r\n\r\n        return connected[socketId];\r\n    }\r\n\r\n    return router;\r\n}"]}
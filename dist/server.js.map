{"version":3,"sources":["server.js"],"names":["fs","express","require","path","socket","bodyParser","cors","morgan","nodemailer","app","server","Server","port","process","env","PORT","config","Object","keys","forEach","set","key","transporter","createTransport","host","service","auth","user","pass","use","json","limit","urlencoded","extended","static","join","__dirname","io","authRoutes","apiRoutes","err","req","res","next","console","error","status","e","listen","log","module","exports"],"mappings":";;AAAA;;IAAYA,E;;AAmDZ;;;;AACA;;;;;;;;AAlDA,IAAMC,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,SAASF,QAAQ,WAAR,CAAf;AACA,IAAMG,aAAaH,QAAQ,aAAR,CAAnB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,SAASL,QAAQ,QAAR,CAAf;AACA,IAAMM,aAAaN,QAAQ,YAAR,CAAnB;;AAEA,IAAMO,MAAMR,SAAZ;AACA;AACA;AACA;AACA;;AAEA,IAAMS,SAASR,QAAQ,MAAR,EAAgBS,MAAhB,CAAuBF,GAAvB,CAAf;AACA,IAAMG,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,SAASd,QAAQ,UAAR,CAAf;;AAEAe,OAAOC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,eAAO;AAC/BV,QAAIW,GAAJ,CAAQC,GAAR,EAAaL,OAAOK,GAAP,CAAb;AACH,CAFD;;AAIA,IAAIC,cAAcd,WAAWe,eAAX,CAA2B;AACzCC,UAAM,gBADmC;AAEzCC,aAAS,OAFgC;AAGzCC,UAAM;AACFC,cAAM,yBADJ;AAEFC,cAAM;AAFJ;AAHmC,CAA3B,CAAlB;;AASAnB,IAAIW,GAAJ,CAAQ,MAAR,EAAgBR,IAAhB;;AAEA;;;;AAIAH,IAAIoB,GAAJ,CAAQxB,WAAWyB,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;AAGAtB,IAAIoB,GAAJ,CAAQxB,WAAW2B,UAAX,CAAsB;AAC1BD,WAAO,MADmB;AAE1BE,cAAU;AAFgB,CAAtB,CAAR;AAIAxB,IAAIoB,GAAJ,CAAQ5B,QAAQiC,MAAR,CAAe/B,KAAKgC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACA3B,IAAIoB,GAAJ,CAAQtB,OAAO,KAAP,CAAR;AACAE,IAAIoB,GAAJ,CAAQvB,MAAR;;AAKA,IAAM+B,KAAK,qBAAa3B,MAAb,CAAX;AACA,uBAAa2B,EAAb;;AAEA,IAAMC,aAAapC,QAAQ,eAAR,EAAyBO,GAAzB,CAAnB;AACA,IAAM8B,YAAYrC,QAAQ,cAAR,EAAwBO,GAAxB,EAA6B4B,EAA7B,EAAiCf,WAAjC,CAAlB;;AAEAb,IAAIoB,GAAJ,CAAQ,OAAR,EAAiBS,UAAjB;AACA7B,IAAIoB,GAAJ,CAAQ,SAAR,EAAmBU,SAAnB;;AAEA9B,IAAIoB,GAAJ,CAAQ,UAACW,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7BC,YAAQC,KAAR,CAAcL,GAAd;AACAE,QAAII,MAAJ,CAAWN,IAAIM,MAAJ,IAAc,GAAzB,EAA8BhB,IAA9B,CAAmC;AAC/Be,eAAOL,IAAIO;AADoB,KAAnC;AAGH,CALD;;AAOArC,OAAOsC,MAAP,CAAcpC,IAAd,EAAoB,eAApB,EAAqC,YAAM;AACvCgC,YAAQK,GAAR,CAAY,uBAAuBrC,IAAnC;AACH,CAFD;;AAIAsC,OAAOC,OAAP,GAAiB1C,GAAjB","file":"server.js","sourcesContent":["import * as fs from 'fs';\r\n\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst socket = require('socket.io');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\nconst morgan = require('morgan');\r\nconst nodemailer = require('nodemailer');\r\n\r\nconst app = express();\r\n// const server = require('https').Server({\r\n//     key: fs.readFileSync('file.pem'),\r\n//     cert: fs.readFileSync('file.crt')\r\n// }, app);\r\n\r\nconst server = require('http').Server(app);\r\nconst port = process.env.PORT || 3333;\r\n\r\nconst config = require('./config');\r\n\r\nObject.keys(config).forEach(key => {\r\n    app.set(key, config[key]);\r\n});\r\n\r\nlet transporter = nodemailer.createTransport({\r\n    host: 'smtp.gmail.com',\r\n    service: 'Gmail',\r\n    auth: {\r\n        user: 'webcamera.sup@gmail.com',\r\n        pass: 'qwerty12345qwerty'\r\n    }\r\n});\r\n\r\napp.set('PORT', port);\r\n\r\n/**\r\n * TODO\r\n * limit to config\r\n */\r\napp.use(bodyParser.json({\r\n    limit: '50mb'\r\n}));\r\napp.use(bodyParser.urlencoded({\r\n    limit: '50mb',\r\n    extended: true\r\n}));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\napp.use(morgan('dev'));\r\napp.use(cors());\r\n\r\nimport SocketIO from 'socket.io';\r\nimport SocketEvents from './sockets';\r\n\r\nconst io = new SocketIO(server);\r\nSocketEvents(io);\r\n\r\nconst authRoutes = require('./routes/auth')(app);\r\nconst apiRoutes = require('./routes/api')(app, io, transporter);\r\n\r\napp.use('/auth', authRoutes);\r\napp.use('/api/v1', apiRoutes);\r\n\r\napp.use((err, req, res, next) => {\r\n    console.error(err);\r\n    res.status(err.status || 400).json({\r\n        error: err.e\r\n    });\r\n});\r\n\r\nserver.listen(port, '192.168.0.104', () => {\r\n    console.log('Listening on port ' + port);\r\n});\r\n\r\nmodule.exports = app;\r\n"]}